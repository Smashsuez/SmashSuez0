import React, { useState } from 'react';
import styles from '../styles/Cart.module.css';
import Image from 'next/legacy/image';
import { useSelector, useDispatch } from 'react-redux';
import { removeProduct, updateCart, reset } from '../redux/cartSlice';
import axios from 'axios';
import { useRouter } from 'next/router';
import OrderDetail from '../components/OrderDetail';
import Head from 'next/head';

const Cart = () => {
  const cart = useSelector((state) => state.cart);
  const [open, setOpen] = useState(true);
  const [cash, setCash] = useState(false);
  const dispatch = useDispatch();
  const router = useRouter();

  const createOrder = async (data) => {
    try {
      const res = await axios.post(
        'https://cors-anywhere.herokuapp.com/https://smash-suez0.vercel.app/api/orders',
        data,
        { headers: { 'X-Requested-With': 'XMLHttpRequest' } }
      );
      if (res.status === 201) {
        dispatch(reset());
        router.push(`/orders/${res.data._id}`);
        console.log(data);
      }
    } catch (err) {
      console.log(err);
    }
  };

  const handleRemove = (productId) => {
    dispatch(removeProduct(productId));
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Smash Burger</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/imgs/ico.png" />
        <link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet"></link>
        <meta charSet="utf-8" />
      </Head>
      <div className={styles.left}>
        <table className={styles.table}>
          <tbody>
            <tr className={styles.trTitle}>
              <th>Product</th>
              <th>Name</th>
              <th>Extras</th>
              <th>Price</th>
              <th>Quantity</th>
              <th>Total</th>
            </tr>
          </tbody>
          <tbody>
            {cart.products.map((product, size) => (
              <tr className={styles.tr} key={product._id}>
                <td className={styles.imgTd}>
                  <div className={styles.imgContainer}>
                    <Image src={product.img} layout="fill" objectFit="cover" alt="" />
                  </div>
                </td>
                <td>
                  <span className={styles.name}>
                    {product.size.text} {product.title}
                  </span>
                </td>
                <td>
                  <span className={styles.extras}>
                    {product.extras.map((extra) => (
                      <span key={extra._id}>{extra.text}, </span>
                    ))}
                  </span>
                </td>
                <td>
                  <span className={styles.price}>£ {product.price}</span>
                </td>
                <td>
                  <span className={styles.quantity}>{product.quantity}</span>
                </td>
                <td>
                  <span className={styles.total}>£ {product.total}</span>
                </td>
                <td>
                  <button
                    className={styles.removeBtn}
                    onClick={() => handleRemove(product._id)}
                  >
                    Remove
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
      <div className={styles.right}>
        <div className={styles.orderSummary}>
          <div className={styles.title}>
            <h2>Order Summary</h2>
          </div>
          <div className={styles.subTotal}>
            <h3>Subtotal</h3>
            <span>£ {cart.subTotal}</span>
          </div>
          <div className={styles.total}>
            <h3>Total</h3>
            <span>£ {cart.total}</span>
          </div>
          <div className={styles.buttons}>
            <button
              className={styles.cancelBtn}
              onClick={() => {
                setOpen(false);
                dispatch(reset());
              }}
            >
              Cancel
            </button>
            <button
              className={styles.confirmBtn}
              onClick={() => {
                setOpen(false);
                setCash(true);
              }}
            >
              Confirm
            </button>
          </div>
        </div>
        {open ? (
          ''
        ) : (
          <OrderDetail
            cash={cash}
            cart={cart}
            createOrder={createOrder}
            setCash={setCash}
            setOpen={setOpen}
          />
        )}
      </div>
    </div>
  );
};

export default Cart;
